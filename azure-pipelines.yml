# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '637939c0-b2cb-4724-ac7d-2b3a3a568de3'
  webApiImageRepository: 'demo-webapi'
  webAppImageRepository: 'demo-webapp'
  containerRegistry: 'joudotmcapacr.azurecr.io'
  webApiDockerfilePath: '$(Build.SourcesDirectory)/mywebapi/Dockerfile'
  webAppDockerfilePath: '$(Build.SourcesDirectory)/mywebapp/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push Web API
      inputs:
        command: buildAndPush
        repository: $(webApiImageRepository)
        dockerfile: $(webApidockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build and push Web App
      inputs:
        command: buildAndPush
        repository: $(webAppImageRepository)
        dockerfile: $(webAppdockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: CmdLine@2
      displayName: 'Replace build number in backend-webapi.yaml file'
      inputs:
        script: 'bash -c "sed -i ''s/BuildNumber/$(Build.BuildId)/g'' backend-webapi.yaml"'
    - task: CmdLine@2
      displayName: 'Replace build number in backend-webapp.yaml file'
      inputs:
        script: 'bash -c "sed -i ''s/BuildNumber/$(Build.BuildId)/g'' backend-webapp.yaml"'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: backend-webapi.yaml'
      inputs:
        PathtoPublish: 'backend-webapi.yaml'
        ArtifactName: 'backend-webapi'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: frontend-webapp.yaml'
      inputs:
        PathtoPublish: 'frontend-webapp.yaml'
        ArtifactName: 'frontend-webapp'

